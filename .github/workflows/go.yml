# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'

  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
# buildするosのバージョンが新しすぎると実行環境で依存しているlibcが古くなり、実行できなくなる。
# なので最新のものを使うわ無い。
jobs:

  build_ubuntu:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.x'

    - name: dependency
      run: go mod tidy

    - name: Build
      run: go build --buildmode=c-shared -o out/libmiyuu_ssh_core.so main.go

  #    run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux
        path: |
          out/libmiyuu_ssh_core.h
          out/libmiyuu_ssh_core.so
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          out/libmiyuu_ssh_core.h
          out/libmiyuu_ssh_core.so

  build_macos:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21.x'

    - name: dependency
      run: go mod tidy

    - name: Build
      run: go build --buildmode=c-shared -o out/libmiyuu_ssh_core.dylib main.go

    - name: Test
      run: go test -v ./...

    - name: upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: macos
        path: |
          out/libmiyuu_ssh_core.h
          out/libmiyuu_ssh_core.dylib

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          out/libmiyuu_ssh_core.h
          out/libmiyuu_ssh_core.dylib
